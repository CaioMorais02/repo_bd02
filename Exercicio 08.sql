DROP TABLE TB_CARGO
DROP TABLE TB_ESCOLARIDADE
DROP TABLE TB_FAIXASALARIAL
DROP TABLE TB_FUNCIONARIO
DROP TABLE TB_LOG_FUNCIONARIO

create database ps_09

use ps_09

CREATE TABLE TB_CARGO (
 CD_CARGO INT NOT NULL PRIMARY KEY,
 NM_CARGO VARCHAR(50) NOT NULL
)

INSERT INTO TB_CARGO VALUES(1, 'ANALISTA')
INSERT INTO TB_CARGO VALUES(2, 'DBA')
INSERT INTO TB_CARGO VALUES(3, 'PROGRAMADOR')


CREATE TABLE TB_ESCOLARIDADE (
  CD_ESCOLARIDADE INT NOT NULL PRIMARY KEY,
  NM_ESCOLARIDADE VARCHAR(50) NOT NULL
)

INSERT INTO TB_ESCOLARIDADE VALUES (1, 'NÍVEL MÉDIO')
INSERT INTO TB_ESCOLARIDADE VALUES (2, 'NÍVEL SUPERIOR')
INSERT INTO TB_ESCOLARIDADE VALUES (3, 'PÓS-GRADUAÇÃO')

CREATE TABLE TB_FAIXASALARIAL (
  CD_CARGO INT NOT NULL REFERENCES TB_CARGO(CD_CARGO),
  CD_ESCOLARIDADE INT NOT NULL REFERENCES TB_ESCOLARIDADE(CD_ESCOLARIDADE),
  MENOR_VALOR  NUMERIC(10,2) NOT NULL,
  MAIOR_VALOR  NUMERIC(10,2) NOT NULL
  PRIMARY KEY (CD_CARGO, CD_ESCOLARIDADE)
)

INSERT INTO TB_FAIXASALARIAL VALUES(1,1,900.0, 1100.0)
INSERT INTO TB_FAIXASALARIAL VALUES(1,2,1200.0, 1300.0)
INSERT INTO TB_FAIXASALARIAL VALUES(1,3,1400.0, 1500.0)

INSERT INTO TB_FAIXASALARIAL VALUES(2,1,600.0, 700.0)
INSERT INTO TB_FAIXASALARIAL VALUES(2,2,800.0, 1000.0)
INSERT INTO TB_FAIXASALARIAL VALUES(2,3,1100.0, 1500.0)

INSERT INTO TB_FAIXASALARIAL VALUES(3,1,1300.0, 1500.0)
INSERT INTO TB_FAIXASALARIAL VALUES(3,2,2000.0, 2500.0)
INSERT INTO TB_FAIXASALARIAL VALUES(3,3,3000.0, 3500.0)


CREATE TABLE TB_FUNCIONARIO (
  MATRICULA INT NOT NULL PRIMARY KEY,
  NOME VARCHAR(30) NOT NULL,
  CD_CARGO INT REFERENCES TB_CARGO(CD_CARGO), 
  CD_ESCOLARIDADE INT REFERENCES TB_ESCOLARIDADE(CD_ESCOLARIDADE),
  SALARIO NUMERIC (10,2)
)  

CREATE TABLE TB_LOG_FUNCIONARIO (
   MATRICULA INT REFERENCES TB_FUNCIONARIO(MATRICULA),
   ERRO VARCHAR(200),
   DATA_ERRO DATETIME
)

create or alter procedure sp_validar_salario (@cargo varchar(50), @escolaridade varchar(50), @salario numeric (10, 2)) AS
	if @cargo = 'ANALISTA'
		if @escolaridade = 'NÍVEL MÉDIO' and @salario >= 900 and @salario <= 1100
			print 'DENTRO DA EXPECTATIVA'
		
		else if @escolaridade = 'NÍVEL SUPERIOR' and @salario >= 1200 and @salario <= 1300
			print 'DENTRO DA EXPECTATIVA'

		else if @escolaridade = 'PÓS-GRADUAÇÃO' and @salario >= 1200 and @salario <= 1300
			print 'DENTRO DA EXPECTATIVA'

		else
			print 'FORA DA EXPECTATIVA'


	else if @cargo = 'DBA'
		if @escolaridade = 'NÍVEL MÉDIO' and @salario >= 600 and @salario <= 700
			print 'DENTRO DA EXPECTATIVA'
		
		else if @escolaridade = 'NÍVEL SUPERIOR' and @salario >= 800 and @salario <= 100
			print 'DENTRO DA EXPECTATIVA'

		else if @escolaridade = 'PÓS-GRADUAÇÃO' and @salario >= 1100 and @salario <= 1500
			print 'DENTRO DA EXPECTATIVA'

		else
			print 'FORA DA EXPECTATIVA'


	else if @cargo = 'PROGRAMADOR'
		if @escolaridade = 'NÍVEL MÉDIO' and @salario >= 1300 and @salario <= 1500
			print 'DENTRO DA EXPECTATIVA'
		
		else if @escolaridade = 'NÍVEL SUPERIOR' and @salario >= 2000 and @salario <= 2500
			print 'DENTRO DA EXPECTATIVA'

		else if @escolaridade = 'PÓS-GRADUAÇÃO' and @salario >= 3000 and @salario <= 3500
			print 'DENTRO DA EXPECTATIVA'

		else
			print 'FORA DA EXPECTATIVA'

exec sp_validar_salario 'DBA', 'NÍVEL SUPERIOR', 650

-------------------------------------------------------------------------------------------

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (1, 'João da Silva', 1, 1, 5000.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (2, 'Maria Souza', 2, 2, 4500.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (3, 'Pedro Oliveira', 3, 1, 6000.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (4, 'Ana Pereira', 1, 3, 5200.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (5, 'Carla Santos', 2, 2, 4800.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (6, 'Ricardo Mendes', 3, 1, 5100.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (7, 'Juliana Lima', 1, 3, 6200.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (8, 'Luiz Fernandes', 2, 2, 5400.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (9, 'Mariana Costa', 3, 3, 5700.00);

INSERT INTO TB_FUNCIONARIO (MATRICULA, NOME, CD_CARGO, CD_ESCOLARIDADE, SALARIO)
VALUES (10, 'Fernanda Oliveira', 1, 1, 4900.00);

create or alter procedure sp_validar_func AS
	declare @cargo varchar(50), @escolaridade varchar(50), @salario numeric(10, 2), @rowcount int

	declare c_func cursor for
	select c.nm_cargo, e.nm_escolaridade, f.salario
	from TB_FUNCIONARIO f inner join TB_CARGO c
	on (f.CD_CARGO = c.CD_CARGO)
	inner join TB_ESCOLARIDADE e
	on (f.CD_ESCOLARIDADE = e.CD_ESCOLARIDADE)

	open c_func
	fetch c_func into @cargo, @escolaridade, @salario

	while (@@FETCH_STATUS = 0)
		begin
			